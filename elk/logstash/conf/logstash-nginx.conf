input {
    file {
        path => [ "/var/log/nginx/*.log" ]
        start_position => "beginning"
        ignore_older => 0
    }
}

filter {
    grok {
        match => { "message" => "%{IPORHOST:clientip} - %{NOTSPACE:remote_user} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} \"%{NOTSPACE:http_x_forwarded_for}\"" }

    }
#    if [http_x_forwarded_for] !~ "^127\.|^192\.168\.|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[01]\.|^10\.|-" {    #排除私网地址
#      geoip {
#        source => "http_x_forwarded_for"
#        target => "geoip"
#        database => "/etc/logstash/GeoLite2-City.mmdb"
#        add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
#        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
#      }
#    }

    mutate {
#      convert => [ "[geoip][coordinates]", "float" ]
      convert => [ "response","integer" ]
      convert => [ "bytes","integer" ]
      replace => { "type" => "nginx_access" }
      remove_field => "message"
    }

    date {
      match => [ "timestamp","dd/MMM/yyyy:HH:mm:ss Z"]

    }
    mutate {
      remove_field => "timestamp"
    }


}
output {
    elasticsearch {
        hosts => ["192.168.1.84:9200"]
        index => "logstash-nginx-access-%{+YYYY.MM.dd}"
    }
    stdout {codec => rubydebug}
}


